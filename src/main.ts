import { NestFactory } from '@nestjs/core';
import * as cookieParser from 'cookie-parser';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { ConfigService } from '@nestjs/config';
import { AppModule } from './app.module';

async function bootstrap() {
  // –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const start = Date.now();

  try {
    const app = await NestFactory.create(AppModule);
    const configService = app.get(ConfigService);

    app.useGlobalPipes(new ValidationPipe());
    app.use(cookieParser());

    // –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ swagger
    const config = new DocumentBuilder()
      .setTitle('Finnplay API')
      .setDescription('Brainex test task')
      .setVersion('1.0')
      .build();
    const document = SwaggerModule.createDocument(app, config);
    SwaggerModule.setup('api', app, document);

    // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –Ω–æ –≤ –¥–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏ –æ–Ω–∏ –Ω–µ –Ω—É–∂–Ω—ã ('PUT', 'DELETE', 'OPTIONS')
    app.enableCors({
      origin: [configService.get<string>('frontendUrl')],
      credentials: true,
      methods: ['GET', 'POST'],
      allowedHeaders: ['Content-Type', 'Authorization', 'Accept'],
    });

    const port = configService.get<number>('port') ?? 3000;
    await app.listen(port);

    const elapsed = Date.now() - start;
    console.log(
      `üöÄ Server running on http://localhost:${port} (started in ${elapsed}ms)`,
    );
  } catch (error) {
    console.error('‚ùå Error starting the application:', error);
  }
}
// –¥–æ–±–∞–≤–∏–ª void, –¥–∞–µ–º –ø–æ–Ω—è—Ç—å –ª–∏–Ω—Ç–µ—Ä—É, —á—Ç–æ –Ω–∞–º –Ω–µ –≤–∞–∂–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏, —Ç.–∫. –º—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤—ã—à–µ
void bootstrap();
