import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import * as cookieParser from 'cookie-parser';
import { ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { ConfigService } from '@nestjs/config';

async function bootstrap() {
  const start = Date.now();

  const app = await NestFactory.create(AppModule);
  const configService = app.get(ConfigService);

  app.useGlobalPipes(new ValidationPipe());
  app.use(cookieParser());

  // –¥–æ–±–∞–≤–∏–º –±–∞–∑–æ–≤—ã–π swagger
  const config = new DocumentBuilder()
    .setTitle('Finnplay API')
    .setDescription('Brainex test task')
    .setVersion('1.0')
    .build();
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document);

  app.enableCors({
    // –∏–∑ .env –∏–ª–∏ react –¥–µ—Ñ–æ–ª—Ç http://localhost:3333 –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ–∞–π–ª–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    origin: [configService.get<string>('frontendUrl')],
    credentials: true,
    // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –Ω–æ –≤ –¥–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏ –æ–Ω–∏ –Ω–µ –Ω—É–∂–Ω—ã ('PUT', 'DELETE', 'OPTIONS')
    methods: ['GET', 'POST'],
    allowedHeaders: ['Content-Type', 'Authorization', 'Accept'],
  });

  // –∏–∑ .env –∏–ª–∏ 3000 –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ñ–∞–π–ª–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const port = configService.get<number>('port');
  try {
    await app.listen(port ?? 3000);

    const end = Date.now();
    const elapsed = end - start;

    console.log(
      `üöÄ Server running on http://localhost:${port} (started in ${elapsed}ms)`,
    );
  } catch (error) {
    console.error('‚ùå Error starting the application:', error);
  }
}

bootstrap();
